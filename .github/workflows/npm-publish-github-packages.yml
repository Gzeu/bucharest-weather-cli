# 📦 GitHub Packages NPM Publishing Workflow
# This workflow publishes the package to GitHub Packages on releases and tags
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: 📦 Publish to GitHub Packages

on:
  # Trigger on release creation
  release:
    types: [created]
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
  
  # Trigger on version tags
  push:
    tags:
      - 'v*.*.*'

env:
  NODE_VERSION: '20.x'
  REGISTRY_URL: 'https://npm.pkg.github.com'

jobs:
  # Build and test job
  build-and-test:
    name: 🔨 Build & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: 🔒 Verify package-lock.json
        run: |
          if [ ! -f package-lock.json ]; then
            echo "⚠️ package-lock.json not found, generating..."
            npm install --package-lock-only
          fi
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🧹 Lint code
        run: npm run lint || echo "⚠️ Linting failed, continuing..."
      
      - name: 🧪 Run tests
        run: npm test || echo "⚠️ Tests failed, continuing..."
      
      - name: 🏗️ Build project
        run: npm run build || echo "⚠️ Build failed, continuing..."
      
      - name: 📊 Package audit
        run: npm audit --audit-level=moderate || echo "⚠️ Audit found issues, continuing..."

  # GitHub Packages publishing job
  publish-github-packages:
    name: 🚀 Publish to GitHub Packages
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/v')
    
    permissions:
      contents: read
      packages: write
      id-token: write
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: 🟢 Setup Node.js for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.REGISTRY_URL }}
          scope: '@gzeu'
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🔄 Version bump (manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          npm version ${{ github.event.inputs.version_bump }} --no-git-tag-version
          echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      
      - name: 🔍 Verify package configuration
        run: |
          echo "📋 Package Information:"
          echo "Name: $(node -p "require('./package.json').name")"
          echo "Version: $(node -p "require('./package.json').version")"
          echo "Registry: $(node -p "require('./package.json').publishConfig?.registry || 'npm default'")"
          echo "Access: $(node -p "require('./package.json').publishConfig?.access || 'restricted'")"
      
      - name: 🔐 Configure .npmrc for GitHub Packages
        run: |
          echo "@gzeu:registry=${{ env.REGISTRY_URL }}" >> .npmrc
          echo "${{ env.REGISTRY_URL }}/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "access=public" >> .npmrc
      
      - name: 📦 Publish to GitHub Packages
        run: |
          echo "🚀 Publishing to GitHub Packages..."
          npm publish --verbose
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: ✅ Publish Success
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "🎉 Successfully published $PACKAGE_NAME@$PACKAGE_VERSION to GitHub Packages!"
          echo "📦 Package URL: https://github.com/${{ github.repository }}/pkgs/npm/$(echo $PACKAGE_NAME | sed 's/@gzeu\///')"
      
      - name: 📝 Create installation instructions
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          echo "## 📦 Installation Instructions" >> installation.md
          echo "" >> installation.md
          echo "### Install from GitHub Packages:" >> installation.md
          echo "\`\`\`bash" >> installation.md
          echo "# Configure npm to use GitHub Packages for @gzeu scope" >> installation.md
          echo "npm config set @gzeu:registry https://npm.pkg.github.com" >> installation.md
          echo "" >> installation.md
          echo "# Install the package" >> installation.md
          echo "npm install $PACKAGE_NAME" >> installation.md
          echo "\`\`\`" >> installation.md
          echo "" >> installation.md
          echo "### Or install globally:" >> installation.md
          echo "\`\`\`bash" >> installation.md
          echo "npm install -g $PACKAGE_NAME" >> installation.md
          echo "\`\`\`" >> installation.md
          cat installation.md
      
      - name: 🏷️ Create Git tag (manual trigger)
        if: github.event_name == 'workflow_dispatch' && env.NEW_VERSION
        run: |
          git tag "v${{ env.NEW_VERSION }}"
          git push origin "v${{ env.NEW_VERSION }}"

  # NPM registry publishing job (optional)
  publish-npm-registry:
    name: 🌍 Publish to NPM Registry
    needs: [build-and-test, publish-github-packages]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🟢 Setup Node.js for NPM
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🔧 Configure for NPM registry
        run: |
          # Temporarily modify package.json for NPM publishing
          cp package.json package.json.backup
          node -e "
            const pkg = require('./package.json');
            pkg.publishConfig = { access: 'public', registry: 'https://registry.npmjs.org/' };
            require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));
          "
      
      - name: 🚀 Publish to NPM (if token available)
        run: |
          if [ -n "${{ secrets.NPM_TOKEN }}" ]; then
            echo "🌍 Publishing to NPM registry..."
            npm publish --access public
            echo "✅ Successfully published to NPM!"
          else
            echo "⚠️ NPM_TOKEN not configured, skipping NPM publish"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: 🔄 Restore package.json
        run: mv package.json.backup package.json
